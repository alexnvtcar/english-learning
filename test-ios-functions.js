// –¢–µ—Å—Ç iOS —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è English Learning App
console.log('üçé iOS Functions Test Script –∑–∞–≥—Ä—É–∂–µ–Ω');

// –≠–º—É–ª—è—Ü–∏—è iPhone User Agent
const originalUserAgent = navigator.userAgent;
Object.defineProperty(navigator, 'userAgent', {
    get: function() {
        return 'Mozilla/5.0 (iPhone; CPU iPhone OS 17_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.0 Mobile/15E148 Safari/604.1';
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è iOS –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
function testIOSDetection() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è iOS...');
    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
    console.log(`iOS –æ–ø—Ä–µ–¥–µ–ª–µ–Ω: ${isIOS}`);
    console.log(`User Agent: ${navigator.userAgent}`);
    return isIOS;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è localStorage
function testLocalStorage() {
    console.log('üíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ localStorage...');
    try {
        const testKey = 'ios-test-' + Date.now();
        const testValue = 'test-value';
        localStorage.setItem(testKey, testValue);
        const retrieved = localStorage.getItem(testKey);
        localStorage.removeItem(testKey);
        
        if (retrieved === testValue) {
            console.log('‚úÖ localStorage —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
            return true;
        } else {
            console.log('‚ùå localStorage —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ localStorage:', error);
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—ç—à–∞
async function testCache() {
    console.log('üóÇÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—ç—à–∞...');
    if ('caches' in window) {
        try {
            const names = await caches.keys();
            console.log(`–ù–∞–π–¥–µ–Ω–æ –∫—ç—à–µ–π: ${names.length}`);
            names.forEach(name => {
                console.log(`  - ${name}`);
            });
            return names.length;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∫—ç—à–∞:', error);
            return 0;
        }
    } else {
        console.log('‚ùå Cache API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        return 0;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Firebase
function testFirebase() {
    console.log('üî• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Firebase...');
    if (typeof firebase !== 'undefined' && firebase.apps && firebase.apps.length > 0) {
        console.log('‚úÖ Firebase –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return true;
    } else {
        console.log('‚ùå Firebase –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–ª–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Service Worker
async function testServiceWorker() {
    console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Service Worker...');
    if ('serviceWorker' in navigator) {
        try {
            const registrations = await navigator.serviceWorker.getRegistrations();
            console.log(`–ù–∞–π–¥–µ–Ω–æ Service Worker: ${registrations.length}`);
            registrations.forEach((registration, index) => {
                console.log(`  - SW ${index + 1}: ${registration.scope}`);
            });
            return registrations.length;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ Service Worker:', error);
            return 0;
        }
    } else {
        console.log('‚ùå Service Worker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        return 0;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è iOS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
async function testIOSInitialization() {
    console.log('üçé –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ iOS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
    
    const results = {
        isIOS: testIOSDetection(),
        localStorage: testLocalStorage(),
        cache: await testCache(),
        firebase: testFirebase(),
        serviceWorker: await testServiceWorker()
    };
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', results);
    
    // –≠–º—É–ª–∏—Ä—É–µ–º iOS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (results.isIOS) {
        console.log('üçé –ó–∞–ø—É—Å–∫ iOS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
        
        // –û—á–∏—Å—Ç–∫–∞ localStorage
        const keysToRemove = [
            'englishLearningData',
            'current-user',
            'has-synced-before',
            'ios_last_update',
            'app-version',
            'last-backup-time'
        ];
        
        keysToRemove.forEach(key => {
            localStorage.removeItem(key);
            console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –∫–ª—é—á: ${key}`);
        });
        
        // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
        if (results.cache > 0) {
            const names = await caches.keys();
            for (const name of names) {
                await caches.delete(name);
                console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –∫—ç—à: ${name}`);
            }
        }
        
        console.log('‚úÖ iOS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
    
    return results;
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
document.addEventListener('DOMContentLoaded', async function() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤ iOS...');
    await testIOSInitialization();
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
window.testIOS = {
    detection: testIOSDetection,
    localStorage: testLocalStorage,
    cache: testCache,
    firebase: testFirebase,
    serviceWorker: testServiceWorker,
    initialization: testIOSInitialization
};

console.log('üçé iOS —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.testIOS');
